---
- name: finish | master | register master status
  ansible.builtin.shell: |
    mysql -e "SHOW MASTER STATUS \G"
    mysql -e "show replicas;"
  # environment:
  #   MYSQL_PWD: "{{ percona_server_root_password }}"
  register: status_master_result
  when: ansible_facts['hostname'] == "mysqlmaster"

- name: finish | slave | register replica status
  ansible.builtin.shell: |
    mysql -e "SHOW REPLICA STATUS \G"
  # environment:
  #   MYSQL_PWD: "{{ percona_server_root_password }}"
  register: status_slave_result
  when: ansible_facts['hostname'] == "mysqlslave"

- name: finish | master | show status
  ansible.builtin.debug:
    msg: "{{ status_master_result.stdout_lines }}"
  ignore_errors: true
  when: ansible_facts['hostname'] == "mysqlmaster"

- name: finish | slave | show status
  ansible.builtin.debug:
    msg: "{{ status_slave_result.stdout_lines }}"
  ignore_errors: true
  when: ansible_facts['hostname'] == "mysqlslave"

- name: finish | master | register databases
  ansible.builtin.shell: |
    mysql -e "show databases";
  # environment:
  #   MYSQL_PWD: "{{ percona_server_root_password }}"
  register: databases_master_result
  when: ansible_facts['hostname'] == "mysqlmaster"

- name: finish | slave | register databases
  ansible.builtin.shell: |
    mysql -e "show databases";
  # environment:
  #   MYSQL_PWD: "{{ percona_server_root_password }}"
  register: databases_slave_result
  when: ansible_facts['hostname'] == "mysqlslave"

- name: finish | master | show databases
  ansible.builtin.debug:
    msg: "{{ databases_master_result.stdout_lines }}"
  ignore_errors: true
  when: ansible_facts['hostname'] == "mysqlmaster"

- name: finish | slave | show databases
  ansible.builtin.debug:
    msg: "{{ databases_slave_result.stdout_lines }}"
  ignore_errors: true
  when: ansible_facts['hostname'] == "mysqlslave"